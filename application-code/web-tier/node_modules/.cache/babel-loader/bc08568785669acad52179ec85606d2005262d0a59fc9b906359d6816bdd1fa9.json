{"ast":null,"code":"var _jsxFileName = \"/Users/dahliasukaik/Documents/aws-three-tier-web-architecture-workshop-main 2/application-code/web-tier/src/components/DatabaseDemo/DatabaseDemo.js\";\nimport React, { Component } from 'react';\nimport './DatabaseDemo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DatabaseDemo extends Component {\n  constructor(props) {\n    super(props);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleButtonClickDel = this.handleButtonClickDel.bind(this);\n    this.state = {\n      transactions: [],\n      text_amt: \"\",\n      text_desc: \"\"\n    };\n  }\n  componentDidMount() {\n    this.populateData();\n  }\n\n  // Fetch data from the backend and populate the transactions table\n  populateData() {\n    this.fetch_retry('http://localhost:4000/transaction', 3).then(res => res.json()).then(data => {\n      this.setState({\n        transactions: data.result\n      });\n      console.log(\"state set\");\n      console.log(this.state.transactions);\n    }).catch(console.log);\n  }\n\n  // Retry function for handling failed API calls\n  async fetch_retry(url, n) {\n    try {\n      return await fetch(url);\n    } catch (err) {\n      if (n === 1) throw err;\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      return await this.fetch_retry(url, n - 1);\n    }\n  }\n  // Render each transaction row\n  renderTableData() {\n    return this.state.transactions.map((transaction, index) => {\n      const {\n        id,\n        amount,\n        description\n      } = transaction;\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  // Handle the delete button click\n  handleButtonClickDel() {\n    // Make sure to delete specific transaction, otherwise you'll need to add logic to handle that.\n    const requestOptions = {\n      method: 'DELETE'\n    };\n    fetch('http://localhost:4000/transaction', requestOptions).then(response => response.json()).then(() => this.populateData()); // Re-fetch data after deletion\n\n    this.setState({\n      text_amt: \"\",\n      text_desc: \"\"\n    });\n  }\n\n  // Handle the add transaction button click\n  handleButtonClick() {\n    // Basic input validation\n    if (!this.state.text_amt || !this.state.text_desc) {\n      alert(\"Both amount and description are required.\");\n      return;\n    }\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: this.state.text_amt,\n        desc: this.state.text_desc\n      })\n    };\n    fetch('http://localhost:4000/transaction', requestOptions).then(response => response.json()).then(() => this.populateData()); // Re-fetch data after adding transaction\n\n    // Reset text fields after adding transaction\n    this.setState({\n      text_amt: \"\",\n      text_desc: \"\"\n    });\n  }\n\n  // Handle text input changes\n  handleTextChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"title\",\n        style: {\n          paddingRight: \"1em\"\n        },\n        children: \"Aurora Database Demo Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          float: \"right\",\n          marginBottom: \"1em\"\n        },\n        type: \"button\",\n        value: \"DEL\",\n        onClick: this.handleButtonClickDel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"transactions\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"AMOUNT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"DESC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                value: \"ADD\",\n                onClick: this.handleButtonClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"text_amt\",\n                value: this.state.text_amt,\n                onChange: this.handleTextChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"text_desc\",\n                value: this.state.text_desc,\n                onChange: this.handleTextChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), this.renderTableData()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DatabaseDemo;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","DatabaseDemo","constructor","props","handleTextChange","bind","handleButtonClick","handleButtonClickDel","state","transactions","text_amt","text_desc","componentDidMount","populateData","fetch_retry","then","res","json","data","setState","result","console","log","catch","url","n","fetch","err","Promise","resolve","setTimeout","renderTableData","map","transaction","index","id","amount","description","children","fileName","_jsxFileName","lineNumber","columnNumber","requestOptions","method","response","alert","headers","body","JSON","stringify","desc","e","target","name","value","render","style","paddingRight","float","marginBottom","type","onClick","onChange"],"sources":["/Users/dahliasukaik/Documents/aws-three-tier-web-architecture-workshop-main 2/application-code/web-tier/src/components/DatabaseDemo/DatabaseDemo.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './DatabaseDemo.css';\n\nclass DatabaseDemo extends Component {\n\n    constructor(props) {\n        super(props); \n        this.handleTextChange = this.handleTextChange.bind(this);\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n        this.handleButtonClickDel = this.handleButtonClickDel.bind(this);\n        this.state = { \n            transactions: [],\n            text_amt: \"\",\n            text_desc: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.populateData();\n    }\n\n    // Fetch data from the backend and populate the transactions table\n    populateData() {\n        this.fetch_retry('http://localhost:4000/transaction', 3)\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ transactions: data.result });\n                console.log(\"state set\");\n                console.log(this.state.transactions);\n            })\n            .catch(console.log);\n    }\n\n    // Retry function for handling failed API calls\n    async fetch_retry(url, n) {\n        try {\n            return await fetch(url);\n        } catch (err) {\n            if (n === 1) throw err;\n            await new Promise(resolve => setTimeout(resolve, 1000)); \n            return await this.fetch_retry(url, n - 1);\n        }\n    };\n\n    // Render each transaction row\n    renderTableData() {\n        return this.state.transactions.map((transaction, index) => {\n            const { id, amount, description } = transaction;\n            return (\n                <tr key={id}>\n                    <td>{id}</td>\n                    <td>{amount}</td>\n                    <td>{description}</td>\n                </tr>\n            );\n        });\n    }\n\n    // Handle the delete button click\n    handleButtonClickDel() {\n        // Make sure to delete specific transaction, otherwise you'll need to add logic to handle that.\n        const requestOptions = {\n            method: 'DELETE'\n        };\n        fetch('http://localhost:4000/transaction', requestOptions)\n            .then(response => response.json())\n            .then(() => this.populateData()); // Re-fetch data after deletion\n\n        this.setState({ text_amt: \"\", text_desc: \"\" });\n    }\n\n    // Handle the add transaction button click\n    handleButtonClick() {\n        // Basic input validation\n        if (!this.state.text_amt || !this.state.text_desc) {\n            alert(\"Both amount and description are required.\");\n            return;\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                amount: this.state.text_amt,\n                desc: this.state.text_desc\n            })\n        };\n\n        fetch('http://localhost:4000/transaction', requestOptions)\n            .then(response => response.json())\n            .then(() => this.populateData()); // Re-fetch data after adding transaction\n\n        // Reset text fields after adding transaction\n        this.setState({ text_amt: \"\", text_desc: \"\" });\n    }\n\n    // Handle text input changes\n    handleTextChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 id=\"title\" style={{ paddingRight: \"1em\" }}>\n                    Aurora Database Demo Page\n                </h1>\n                <input\n                    style={{ float: \"right\", marginBottom: \"1em\" }}\n                    type=\"button\"\n                    value=\"DEL\"\n                    onClick={this.handleButtonClickDel}\n                />\n                <table id=\"transactions\">\n                    <tbody>\n                        <tr>\n                            <td>ID</td>\n                            <td>AMOUNT</td>\n                            <td>DESC</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <input\n                                    type=\"button\"\n                                    value=\"ADD\"\n                                    onClick={this.handleButtonClick}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    name=\"text_amt\"\n                                    value={this.state.text_amt}\n                                    onChange={this.handleTextChange}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    name=\"text_desc\"\n                                    value={this.state.text_desc}\n                                    onChange={this.handleTextChange}\n                                />\n                            </td>\n                        </tr>\n                        {this.renderTableData()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default DatabaseDemo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}